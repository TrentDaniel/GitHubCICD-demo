# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ master, some_branch]
  pull_request:
    branches: [master, some_branch]
  schedule:
    - cron: '*/1 * * * *'

jobs:
  Linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Create cache file
      run: |
        mkdir check-SHA
        echo ${{ github.sha }} > github-sha.txt
    - name: Check SHA
      id: check_sha
      uses: actions/cache@v1
      with:
        path: check-SHA
        key: check-SHA-${{ github.sha }}
    - name: Some subsequent steps
      if: steps.check_sha.outputs.cache-hit != 'true'
      run: echo "Execute the subsequent steps"
    - name: Some more subsequent steps
      run: echo "Hello, World!"
#    - name: Install dependencies
#      run: |
#        python -m pip install --upgrade pip
#        pip install -r requirements.txt
#        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#    - name: Lint with flake8
#      run: |
#        # stop the build if there are Python syntax errors or undefined names
#        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#    - name: Run Script
#      run: |
#        python ./someScript.py
#    - name: Run Tests
#     run: |
#        python -m pytest -s -v
#   - name: Create Artifact
#      run: |
#        echo hello | tee ./artifact_file.txt
#    - name: Save Artifact
#      uses: actions/upload-artifact@v2
#     with:
#        name: my-artifact
#        path: ./artifact_file.txt

#  Windows:
#    runs-on: windows-latest
#    runs-on: [self-hosted, Windows, X64]
#    strategy:
#      matrix:
#        python-version: [3.6, 3.7]
#
#    steps:
#    - uses: actions/checkout@v2
#    - name: Pull solbroker Image
#      run: |
#        docker pull solace/solace-pubsub-standard:9.6.0.27
#    - name: Set up Python ${{ matrix.python-version }}
#      uses: actions/setup-python@v2
#      with:
#        python-version: ${{ matrix.python-version }}
#    - name: Install Python Git Module Plugin
#      run: |
#        python -m pip install pytest-github-actions-annotate-failures
#    - name: Install dependencies
#      run: |
#        python -m pip install --upgrade pip
#        pip install -r requirements.txt
##        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
##        #    - name: Lint with flake8
##        #      run: |
##        #        # stop the build if there are Python syntax errors or undefined names
##        #        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
##        #        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
##        #        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#    - name: Run Script
#      run: |
#        python ./someScript.py
#    - name: Run Tests
#      run: |
#        python -m pytest -s -v

#  MacOS:
#    runs-on: macos-latest
#    strategy:
#      matrix:
#        python-version: [3.6, 3.7]
#
#    steps:
#    - uses: actions/checkout@v2
#    - name: Set up Python ${{ matrix.python-version }}
#      uses: actions/setup-python@v2
#      with:
#        python-version: ${{ matrix.python-version }}
#    - name: Install dependencies
#      run: |
#        python -m pip install --upgrade pip
#        pip install -r requirements.txt
##        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
##        #    - name: Lint with flake8
##        #      run: |
##        #        # stop the build if there are Python syntax errors or undefined names
##        #        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
##        #        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
##        #        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#    - name: Run Script
#      run: |
#        python ./someScript.py
#    - name: Run Tests
#      run: |
#        python -m pytest -s -v
